/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eticket;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jonis
 */
public class cadEntradas extends javax.swing.JFrame {
    
    private formMain telaPrincipal;
    
    private void calculaTotalProdutos() {
        Double soma = 0.0;
            try{ 
                for (int i = 0 ; i < jTableItensCompra.getRowCount(); i++) {
                    Double valorAux = Double.parseDouble((String) jTableItensCompra.getValueAt(i,4));
                    soma+= valorAux; 
                }     
                jTextFieldValorTotal.setText(String.valueOf(soma));
                
                
            }
            catch(Exception e){ JOptionPane.showMessageDialog(null,"Erro ao calcular Total Produtos: "+e.getMessage()); 
            } 
        }
    
    private void carregaFornecedor() {
     
        try  {
             
              
                Statement st = Conexao.conectar();
                ResultSet rs = st.executeQuery("SELECT Fornecedores.RAZAOSOCIAL FROM Fornecedores WHERE Fornecedores.Cnpj = '"+jTextFieldCnpjFornecedor.getText()+"';");
                
                while(rs.next()) {
                    String razaoSocial = rs.getString("RAZAOSOCIAL");
                    jTextFieldRazaoSocial.setText(razaoSocial);
                    jTextFieldRazaoSocial.enable(false);
                            jTextFieldCodBarras.requestFocus();
         }
                
             st.close();
         }catch(Exception e){
              JOptionPane.showMessageDialog(null,"Erro ao carregar dados do fornecedor: "+e.getMessage());
            }
    }
    
    private void geraData(){
        jTextFieldDataEntrada.setText(new SimpleDateFormat("dd/MM/yyyy").format(new Date(System.currentTimeMillis())));

    }
    
    private void carregaProdutos(){
                try  {
                Statement st = Conexao.conectar();
                ResultSet rs = st.executeQuery("SELECT * FROM Mercadorias WHERE Mercadorias.CodBarras = '"+jTextFieldCodBarras.getText()+"';");
                //ResultSet rx = st.executeQuery("SELECT Mercadorias.PrecoVenda FROM Mercadorias WHERE Mercadorias.CodBarras = '"+jTextFieldCodBarras.getText()+"';");
                
                while(rs.next()) {
                            jTextFieldDescricao.setText(rs.getString("Descricao"));
                            jTextFieldPrecoUnitario.setText(rs.getString("PrecoCusto"));
                            jTextFieldDescricao.enable(false);
                            jTextFieldPrecoUnitario.enable(false);
                            jTextFieldQuantidade.requestFocus();
                }
                
                st.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"Erro ao carregar dados do produto: "+e.getMessage());
            }
    }
    
    public void recebeTela(formMain telaPrincipal){
        this.telaPrincipal = telaPrincipal;
    }
    
    
    
    
    
    /**
     * Creates new form cadVendas
     */
    public cadEntradas(){
        initComponents();
        geraData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNumeroNota = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldCodBarras = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldPrecoUnitario = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldPrecoTotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldDataEntrada = new javax.swing.JTextField();
        jTextFieldRazaoSocial = new javax.swing.JTextField();
        jButtonAddItem = new javax.swing.JButton();
        jTextFieldDescricao = new javax.swing.JTextField();
        jTextFieldCnpjFornecedor = new javax.swing.JFormattedTextField();
        jButtonDeletar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButtonSalvar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldValorTotal = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableItensCompra = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("frmVendas"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Entrada de Mercadorias", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 51, 102))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jPanel1.setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Número da Nota:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("CNPJ Fornecedor:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome do Fornecedor:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Código de Barras:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Descrição da Mercadoria:");

        jTextFieldCodBarras.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodBarrasFocusLost(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Quantidade:");

        jTextFieldQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldQuantidadeFocusLost(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Preço Unitário - R$");

        jTextFieldPrecoUnitario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPrecoUnitarioFocusLost(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Preço Total - R$");

        jTextFieldPrecoTotal.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Data:");

        jTextFieldDataEntrada.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTextFieldDataEntrada.setEnabled(false);

        jButtonAddItem.setText("Adicionar Item");
        jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItemActionPerformed(evt);
            }
        });

        try {
            jTextFieldCnpjFornecedor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextFieldCnpjFornecedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCnpjFornecedorFocusLost(evt);
            }
        });

        jButtonDeletar.setText("Excluir Item");
        jButtonDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldCodBarras)
                                .addComponent(jTextFieldDataEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldCnpjFornecedor))
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldRazaoSocial, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldDescricao)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextFieldNumeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldPrecoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAddItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonDeletar)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNumeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCnpjFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrecoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddItem)
                    .addComponent(jButtonDeletar)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pagamento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eticket/Save-icon.png"))); // NOI18N
        jButtonSalvar.setToolTipText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eticket/Clear-icon.png"))); // NOI18N
        jButtonLimpar.setToolTipText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eticket/Log-Out-icon.png"))); // NOI18N
        jButtonSair.setToolTipText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Total Entrada - R$");

        jTextFieldValorTotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(jButtonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableItensCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código de Barras:", "Descrição", "Quantidade", "Preço Unitário", "Preço Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableItensCompra.setName("jTableItensCompra"); // NOI18N
        jScrollPane2.setViewportView(jTableItensCompra);
        if (jTableItensCompra.getColumnModel().getColumnCount() > 0) {
            jTableItensCompra.getColumnModel().getColumn(0).setResizable(false);
            jTableItensCompra.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTableItensCompra.getColumnModel().getColumn(1).setResizable(false);
            jTableItensCompra.getColumnModel().getColumn(1).setPreferredWidth(60);
            jTableItensCompra.getColumnModel().getColumn(2).setResizable(false);
            jTableItensCompra.getColumnModel().getColumn(2).setPreferredWidth(10);
            jTableItensCompra.getColumnModel().getColumn(3).setResizable(false);
            jTableItensCompra.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTableItensCompra.getColumnModel().getColumn(4).setResizable(false);
            jTableItensCompra.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("ITENS DA VENDA:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldPrecoUnitarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPrecoUnitarioFocusLost
        
            
    }//GEN-LAST:event_jTextFieldPrecoUnitarioFocusLost

    private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed
        
        DefaultTableModel dtm = (DefaultTableModel) jTableItensCompra.getModel();
                dtm.addRow(new Object[]{jTextFieldCodBarras.getText(),jTextFieldDescricao.getText(),jTextFieldQuantidade.getText(),jTextFieldPrecoUnitario.getText(),jTextFieldPrecoTotal.getText()});
        calculaTotalProdutos();
        
        
        jTextFieldNumeroNota.enable(false);
        jTextFieldCnpjFornecedor.enable(false);
        jTextFieldCodBarras.setText("");
        jTextFieldDescricao.setText("");
        jTextFieldDescricao.enable(true);
        jTextFieldQuantidade.setText("");
        jTextFieldPrecoUnitario.setText("");
        jTextFieldPrecoTotal.setText("");
        jTextFieldCodBarras.requestFocus();
        
        
        
    }//GEN-LAST:event_jButtonAddItemActionPerformed

    private void jTextFieldCodBarrasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodBarrasFocusLost
        try {
            if(verificaExistencia(jTextFieldCodBarras.getText())){
                carregaProdutos();}
            else{
                jTextFieldCodBarras.requestFocus();
            }
        } catch (Exception ex) {
            Logger.getLogger(cadEntradas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextFieldCodBarrasFocusLost

    private void jTextFieldQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeFocusLost
            double x, y, z;
                x = Double.parseDouble(jTextFieldQuantidade.getText());
                y = Double.parseDouble(jTextFieldPrecoUnitario.getText());
                z = (x*y);
                jTextFieldPrecoTotal.setText(String.valueOf(z));
                
    }//GEN-LAST:event_jTextFieldQuantidadeFocusLost

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        telaPrincipal.enable(true);
        this.dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        jTextFieldNumeroNota.setText("");
        jTextFieldCnpjFornecedor.setText("");
        jTextFieldRazaoSocial.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldPrecoUnitario.setText("");
        jTextFieldPrecoTotal.setText("");
        jTextFieldCodBarras.setText("");
        jTextFieldValorTotal.setText("");
        jTextFieldNumeroNota.enable(true);
        jTextFieldCnpjFornecedor.enable(true);
        jTextFieldNumeroNota.requestFocus();

        DefaultTableModel dtm = (DefaultTableModel) jTableItensCompra.getModel();
        int qtd = dtm.getRowCount();
        for(int i=0; i<qtd; i++){
            dtm.removeRow(0);
        }

    }//GEN-LAST:event_jButtonLimparActionPerformed

    private boolean verificaExistencia(String codBarras) throws Exception{
        
        String codB = null;
        
            Statement st = Conexao.conectar();
        
               //String codBarras = jTextFieldCodBarras.getText();
                ResultSet rs = st.executeQuery("SELECT CODBARRAS FROM MERCADORIAS WHERE CODBARRAS = '"+codBarras+"';");
              
                while(rs.next()){
                    codB = rs.getString("CODBARRAS");
                }
       
//metodo que ve se existe no banco de dados
        
        if (!jTextFieldCodBarras.getText().equals(codB)){
           if(!jTextFieldCodBarras.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Mercadoria não cadastrada!");
           }
            return false;
        }
        else {
            return true;
        }
        
        
    }
    
    private boolean verificaFornecedor(String codBarrras) throws Exception{
        
        String codB = null;
        
            Statement st = Conexao.conectar();
        
        
                String cnpjFornecedor = jTextFieldCnpjFornecedor.getText();
                ResultSet rs = st.executeQuery("SELECT CNPJ FROM FORNECEDORES WHERE CNPJ = '"+cnpjFornecedor+"';");
              
                while(rs.next()){
                    codB = rs.getString("CNPJ");
                }
       
//metodo que ve se existe no banco de dados
        if (!jTextFieldCnpjFornecedor.getText().equals(codB)){
            if(!jTextFieldCnpjFornecedor.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Fornecedor não cadastrado!");
            }return false;
        }
        else {
            return true;
        }
        
        
    }
    
    
    
    private void atualizaQuantidade() throws Exception{
        try{
          String sqlqtd, codBarras;
            int quantidade;

         for(int i=0; i<jTableItensCompra.getRowCount(); i++){   
            Statement st = Conexao.conectar();
        
                    codBarras = (String.valueOf(jTableItensCompra.getValueAt(i, 0)));
                    ResultSet rs = st.executeQuery("SELECT QTD FROM MERCADORIAS WHERE MERCADORIAS.CODBARRAS = '"+codBarras+"'");
                    while (rs.next())
                        {
                    int qtd = rs.getInt("QTD");
                    quantidade = qtd + Integer.parseInt((String)jTableItensCompra.getValueAt(i, 2));          
                    sqlqtd = ("UPDATE MERCADORIAS SET QTD = '"+quantidade+"' WHERE MERCADORIAS.CODBARRAS = '"+codBarras+"';");
                    st.executeUpdate(sqlqtd);
                    }
    }
        }catch (SQLException ex) {
            
        }
    }
    
    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed

        try {
            Statement stm = Conexao.conectar();
                String numNota = (""+jTextFieldNumeroNota.getText());
                String cnpjFornecedor = (""+jTextFieldCnpjFornecedor.getText());
                String nomeFornecedor = (""+jTextFieldRazaoSocial.getText());
                String dataEntrada = (""+jTextFieldDataEntrada.getText());
                String totalEntrada = (""+jTextFieldValorTotal.getText());
                String sql1 = "INSERT INTO DADOS_COMPRA (DATACOMPRA,NUMERONOTA,CNPJFORNECEDOR,NOMEFORNECEDOR, VALOR_COMPRA) VALUES ('"+dataEntrada+"','"+numNota+"','"+cnpjFornecedor+"','"+nomeFornecedor+"','"+totalEntrada+"');";
                    for(int i=0; i<jTableItensCompra.getRowCount(); i++){  
                        String codBarras, quant, descricao, valorUnidade, valorTotal, sql, sqlqtd;
                            codBarras = (String.valueOf(jTableItensCompra.getValueAt(i, 0)));    
                            descricao = (String.valueOf(jTableItensCompra.getValueAt(i, 1)));        
                            valorUnidade = (String.valueOf(jTableItensCompra.getValueAt(i, 3)));
                            valorTotal = (String.valueOf(jTableItensCompra.getValueAt(i, 4)));
                            quant = String.valueOf(jTableItensCompra.getValueAt(i, 2));          
                                sql = ("INSERT INTO ITENS_COMPRA (NUMERONOTA,CODBARRAS,DESCRICAO,QUANTIDADE,VALOR_UNIT,VALOR_TOTAL) VALUES ('"+numNota+"','"+codBarras+"','"+descricao+"','"+quant+"','"+valorUnidade+"','"+valorTotal+"');");
                                stm.execute(sql);
                        }
                
            atualizaQuantidade();
            stm.execute(sql1);
            stm.close();
            jTextFieldCodBarras.requestFocus();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Erro ao carregar dados do fornecedor: "+e.getMessage());
        }
        jButtonLimparActionPerformed(evt);
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jTextFieldCnpjFornecedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCnpjFornecedorFocusLost
        try {
            if(verificaFornecedor(jTextFieldCnpjFornecedor.getText())){
                carregaFornecedor();}
            else{
                jTextFieldCnpjFornecedor.requestFocus();
            }
        } catch (Exception ex) {
            Logger.getLogger(cadEntradas.class.getName()).log(Level.SEVERE, null, ex);
        }                                                      
    }//GEN-LAST:event_jTextFieldCnpjFornecedorFocusLost

    private void jButtonDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletarActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)jTableItensCompra.getModel();
        if (jTableItensCompra.getSelectedRow() >= 0){
            dtm.removeRow(jTableItensCompra.getSelectedRow());
            jTableItensCompra.setModel(dtm);
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um item para excluir");
        }
    }//GEN-LAST:event_jButtonDeletarActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonDeletar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableItensCompra;
    private javax.swing.JFormattedTextField jTextFieldCnpjFornecedor;
    private javax.swing.JTextField jTextFieldCodBarras;
    private javax.swing.JTextField jTextFieldDataEntrada;
    private javax.swing.JTextField jTextFieldDescricao;
    private javax.swing.JTextField jTextFieldNumeroNota;
    private javax.swing.JTextField jTextFieldPrecoTotal;
    private javax.swing.JTextField jTextFieldPrecoUnitario;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldRazaoSocial;
    private javax.swing.JTextField jTextFieldValorTotal;
    // End of variables declaration//GEN-END:variables

   
}
